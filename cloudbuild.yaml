steps:
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_IMAGE_NAME}", "."]
    id: build

  # 1. Docker push to Google Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args: [ "push", "${_IMAGE_NAME}" ]
    id: Push

  # 2. Setup Cloudsql Proxy
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        echo FROM '${_IMAGE_NAME}
        COPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy /cloudsql/cloud_sql_proxy' > Dockerfile-proxy;
        
        docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy .
    id: layer

  # 3. Migrate and collect static
  - name: "${_IMAGE_NAME}-proxy"
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        /cloudsql/cloud_sql_proxy -instances='oilstub-backend1:us-south1:oilstub-db'=tcp:0.0.0.0:5432 & sleep 2;
        
        cd
        
        echo "ðŸŽ¸ migrate"
        python manage.py migrate
        
        echo "ðŸ“¦ collect static"
        python manage.py collectstatic --noinput

    id: Migrate

  # 5. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud

# Store images in Google Artifact Registry
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed

options:
  logging: CLOUD_LOGGING_ONLY


substitutions:
  _IMAGE_NAME: ${_GCR_HOSTNAME}/${PROJECT_ID}/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}
